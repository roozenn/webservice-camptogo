# CHANGELOG CHAT

## Update Besar (Juli 2024)

### Database & Migrasi
- Migrasi database kini menggunakan Alembic, semua perubahan model dilakukan via migration script.
- Penambahan field baru pada tabel users (username, gender, date_of_birth, phone_number) dan product_reviews (user_id, order_id).
- Penyesuaian path database agar tidak terjadi duplikasi file db.
- Penambahan dan perbaikan script seed_data.py agar mengisi semua tabel dengan data dummy yang saling terhubung.

### Static Files
- Menambahkan konfigurasi StaticFiles di main.py agar folder uploads dan subfoldernya bisa diakses dari luar (untuk foto profil dan review).

### Endpoint Baru & Perbaikan
- Endpoint **/reviews** sekarang hanya menerima upload file gambar (bukan URL manual), file disimpan di uploads/review_images, path file disimpan di field images (list string JSON).
- Endpoint **/profile**: GET/PUT profile, upload foto profil, ganti password. Upload foto profil juga pakai static files.
- Endpoint **/cart, /addresses, /payment-methods, /orders** sudah lengkap dan saling terhubung.
- Endpoint **/orders**: validasi kupon, pengurangan biaya, relasi ke address, payment method, dsb.
- Endpoint **/reviews**: validasi hanya bisa review produk yang pernah diorder, satu kali per produk per order.
- Semua endpoint upload file (foto profil, review) sudah support multipart/form-data dan validasi tipe file.

### Struktur Project
- Semua fitur besar dipisah ke file endpoint sendiri (auth, home, products, search, favorites, cart, addresses, payment_methods, orders, reviews, profile).
- Semua model ORM terpusat di models.py.
- Script seed_data.py dan clear_data.py untuk pengisian/reset data.
- Alembic digunakan untuk migrasi database.

### Catatan Penggunaan
- Token JWT expired default 30 menit, bisa diubah di auth.py.
- Semua file upload bisa diakses via URL /uploads/...
- Untuk review produk, user harus sudah pernah order produk tersebut.
- Untuk upload review, gunakan multipart/form-data, field files bisa multiple file.
- Semua data dummy seed sudah saling terhubung dan cocok untuk testing seluruh fitur aplikasi.

### Tips Integrasi Flutter
- Upload file ke endpoint review dan profile pakai MultipartRequest.
- Token JWT wajib dikirim di header Authorization.
- Semua data relasi (product_id, order_id, dsb) bisa diambil dari endpoint terkait (list order, list produk, dsb).

---

## Log Perubahan Sebelumnya (Mei-Juni 2024)
- (Lihat log lama di bawah untuk perubahan sebelum migrasi besar Juli 2024)

## Struktur Project
- Project dipecah menjadi beberapa file: main.py, db.py, models.py, auth.py, requirements.txt, README.md
- Menggunakan SQLite (SQLAlchemy) untuk database
- Menggunakan JWT untuk autentikasi
- Menggunakan passlib untuk hash password
- Menggunakan python-jose untuk encode/decode JWT
- Menambahkan security scheme HTTP Bearer agar Swagger UI bisa testing endpoint dengan token

## File dan Perubahan

### main.py
- Entry point FastAPI
- Inisialisasi database (Base.metadata.create_all)
- Include router dari auth.py

### db.py
- Koneksi dan inisialisasi database SQLite dengan SQLAlchemy
- SessionLocal dan Base

### models.py
- Model User (id, full_name, email, hashed_password, profile_picture)

### auth.py
- Endpoint: /auth/register, /auth/login, /auth/refresh, /auth/logout
- Register: simpan user ke database, hash password
- Login: verifikasi password, generate JWT
- Refresh: verifikasi JWT, generate JWT baru
- Logout: dummy (hanya return sukses, tidak blacklist token)
- Semua endpoint pakai response model Pydantic
- Endpoint refresh dan logout sekarang pakai HTTPBearer (Swagger UI bisa authorize)

### requirements.txt
- fastapi
- uvicorn
- pydantic
- sqlalchemy
- passlib[bcrypt]
- python-jose

### README.md
- Petunjuk instalasi dan penggunaan

## Catatan
- Semua endpoint bisa dicoba dari Swagger UI (http://127.0.0.1:8000/docs)
- Untuk endpoint yang butuh token, gunakan tombol Authorize di Swagger UI
- Token JWT hanya valid jika user masih ada di database dan belum expired
- Jika ingin menambah fitur baru, cukup tambah file baru dan include di main.py

## Perubahan Sesi Chat Terkini
- Menambahkan file `home.py` untuk endpoint Beranda.
- Menambahkan file `products.py` untuk endpoint Produk.
- Menambahkan model SQLAlchemy baru (`Banner`, `Category`, `Product`, `ProductImage`, `ProductReview`) di `models.py`.
- Menambahkan script `seed_data.py` untuk mengisi data awal ke database.
- Menambahkan script `clear_data.py` untuk menghapus data dari tabel database.
- Mengubah endpoint di `home.py` agar mengambil data dari database.
- Mengubah endpoint di `products.py` agar mengambil data dari database.
- Menambahkan konfigurasi `from_attributes=True` pada model Pydantic yang relevan untuk kompatibilitas Pydantic v2. 

## Log Perubahan Sesi Chat Terbaru (30 Mei 2025)
- **Perbaikan besar pada endpoint favorites:**
  - Error 401 "Could not validate credentials" ternyata disebabkan oleh field `sub` pada JWT yang bertipe integer, padahal python-jose mengharuskan string.
  - Solusi: Semua pembuatan token JWT diubah menjadi `{"sub": str(user.id)}` baik pada login maupun refresh.
  - Fungsi `get_current_user` tetap meng-cast `sub` ke integer sebelum query ke database.
  - Setelah perbaikan, endpoint favorites bisa diakses dengan token hasil login/refresh baru.
  - Ditambahkan log print di fungsi `get_current_user` dan endpoint favorites untuk debugging.

- **Penjelasan penggunaan endpoint search:**
  - Endpoint `/search`:
    - Parameter: `q` (kata kunci, wajib), `category_id` (opsional), `page` (opsional), `limit` (opsional)
    - Fungsi: mencari produk berdasarkan nama, bisa difilter kategori, dan mendukung pagination.
    - Contoh: `/search?q=matras&limit=10`
  - Endpoint `/search/suggestions`:
    - Parameter: `q` (kata kunci, wajib)
    - Fungsi: memberikan saran nama produk (autocomplete) berdasarkan kata kunci.
    - Contoh: `/search/suggestions?q=ten`
  - Sudah dijelaskan juga contoh cURL dan response dari kedua endpoint tersebut.

- **Catatan:**
  - Jika error validasi JWT muncul, pastikan field `sub` pada JWT adalah string, waktu server sinkron, dan user masih ada di database.
  - Semua solusi dan penjelasan sudah dicatat sebelum memulai chat baru.

## Log Perubahan & Troubleshooting Seed Data (Juli 2024)

- **Penambahan Data Dummy:**
  - Jumlah user di seed data menjadi 10 user dengan data realistis.
  - Setiap produk (20 produk) memiliki minimal 2 review dari user berbeda, komentar dan rating bervariasi.
  - Semua produk sudah memiliki gambar utama (primary) dari link CDN yang diberikan user.

- **Perubahan Model & Migrasi:**
  - Field `order_id` pada model `ProductReview` diubah menjadi nullable (`nullable=True`) agar seed review dummy tanpa order bisa masuk.
  - Proses migrasi dengan Alembic pada SQLite gagal karena keterbatasan SQLite (tidak support ALTER COLUMN). Sudah dicoba solusi manual (recreate table), namun tetap error.
  - Solusi final: database dihapus dan dibuat ulang dari awal tanpa Alembic, lalu seed data dijalankan ulang.

- **Troubleshooting:**
  - Error NOT NULL constraint pada kolom `order_id` saat insert review dummy berhasil diatasi setelah reset database dan create table ulang dari model.
  - Error `ModuleNotFoundError: No module named 'passlib'` saat menjalankan seed_data.py diatasi dengan install passlib: `pip install passlib[bcrypt]`.

- **Catatan:**
  - Untuk perubahan struktur tabel di SQLite, jika migrasi gagal, solusi paling aman adalah drop database dan create table ulang dari model.
  - Semua seed data sekarang sudah sesuai permintaan: user, produk, gambar, dan review dummy.